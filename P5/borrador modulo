modulo: TOK_IDENTIFICADOR '%=' exp
{
  simbolo* p_s = NULL;
  
  p_s = ts_search(tabla, $1.lexema);
  if(!p_s) {
    sprintf(err, "Acceso a variable no declarada %s", $1.lexema);
    yyerror(err);
    return -1;
  }

  if (get_simbolo_categoria(p_s) == FUNCION ||
              get_simbolo_clase(p_s) == VECTOR ||
              get_simbolo_tipo(p_s) != ENTERO/*falta comprobar que sea tipo entero*/) {
    yyerror("modulo incompatible");
    return -1;
  }

  /*COMPROBAR exp TIPO ENTERO*/

  if (ambito_local) {
    if(get_simbolo_categoria(p_s) == PARAMETRO) {
      escribirParametro(yyasm, get_simbolo_adicional2(p_s), num_parametros_actual);
    } else {
      escribirVariableLocal(yyasm, get_simbolo_adicional2(p_s));
    }
    /* OBTENER VALOR DEL IDENTIFICADOR PARA TENERLO COMO DIVIDENDO*/
    /*modulo*/
    asignarDestinoEnPila(yyasm, $3.es_direccion);/*NUNCA SERA DIRECCION*/
  } else {
    /*Hacer modulo de la expresion */

    asignar(yyasm, $1.lexema, $3.es_direccion);/*NUNCA SERA DIRECCION*/
  }

  fprintf(yyout, ";R43:\t<modulo> ::= <identificador> = <exp>\n");
} 
  | elemento_vector '%=' exp
{
  if ($1.tipo != ENTERO/*falta comprobar que sea tipo entero*/) {
    yyerror("modulo incompatible");
    return -1;
  }
  /*COMPROBAR exp TIPO ENTERO*/

  /*Hacer modulo de la expresion */
  asignarElementoVector(yyasm, $3.es_direccion);/*NUNCA SERA DIRECCION*/

  fprintf(yyout, ";R44:\t<modulo> ::= <elemento_vector> = <exp>\n");
};